# coding: utf-8

"""
    Consolidate Services

    Description of all APIs  # noqa: E501

    The version of the OpenAPI document: version not set
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import argocd_client
from argocd_client.models.repository_helm_app_spec import RepositoryHelmAppSpec  # noqa: E501
from argocd_client.rest import ApiException

class TestRepositoryHelmAppSpec(unittest.TestCase):
    """RepositoryHelmAppSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test RepositoryHelmAppSpec
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = argocd_client.models.repository_helm_app_spec.RepositoryHelmAppSpec()  # noqa: E501
        if include_optional :
            return RepositoryHelmAppSpec(
                file_parameters = [
                    argocd_client.models.helm_file_parameter_is_a_file_parameter_to_a_helm_template.HelmFileParameter is a file parameter to a helm template(
                        name = '0', 
                        path = '0', )
                    ], 
                name = '0', 
                parameters = [
                    argocd_client.models.helm_parameter_is_a_parameter_to_a_helm_template.HelmParameter is a parameter to a helm template(
                        force_string = True, 
                        name = '0', 
                        value = '0', )
                    ], 
                value_files = [
                    '0'
                    ], 
                values = '0'
            )
        else :
            return RepositoryHelmAppSpec(
        )

    def testRepositoryHelmAppSpec(self):
        """Test RepositoryHelmAppSpec"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
