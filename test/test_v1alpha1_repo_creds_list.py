# coding: utf-8

"""
    Consolidate Services

    Description of all APIs  # noqa: E501

    The version of the OpenAPI document: version not set
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import argocd_client
from argocd_client.models.v1alpha1_repo_creds_list import V1alpha1RepoCredsList  # noqa: E501
from argocd_client.rest import ApiException

class TestV1alpha1RepoCredsList(unittest.TestCase):
    """V1alpha1RepoCredsList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V1alpha1RepoCredsList
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = argocd_client.models.v1alpha1_repo_creds_list.V1alpha1RepoCredsList()  # noqa: E501
        if include_optional :
            return V1alpha1RepoCredsList(
                items = [
                    argocd_client.models.repo_creds_holds_a_repository_credentials_definition.RepoCreds holds a repository credentials definition(
                        password = '0', 
                        ssh_private_key = '0', 
                        tls_client_cert_data = '0', 
                        tls_client_cert_key = '0', 
                        url = '0', 
                        username = '0', )
                    ], 
                metadata = argocd_client.models.v1_list_meta.v1ListMeta(
                    continue = '0', 
                    remaining_item_count = '0', 
                    resource_version = '0', 
                    self_link = '0', )
            )
        else :
            return V1alpha1RepoCredsList(
        )

    def testV1alpha1RepoCredsList(self):
        """Test V1alpha1RepoCredsList"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
