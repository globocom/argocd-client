# coding: utf-8

"""
    Consolidate Services

    Description of all APIs  # noqa: E501

    The version of the OpenAPI document: version not set
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import argocd_client
from argocd_client.models.v1alpha1_config_management_plugin import V1alpha1ConfigManagementPlugin  # noqa: E501
from argocd_client.rest import ApiException

class TestV1alpha1ConfigManagementPlugin(unittest.TestCase):
    """V1alpha1ConfigManagementPlugin unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V1alpha1ConfigManagementPlugin
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = argocd_client.models.v1alpha1_config_management_plugin.V1alpha1ConfigManagementPlugin()  # noqa: E501
        if include_optional :
            return V1alpha1ConfigManagementPlugin(
                generate = argocd_client.models.command_holds_binary_path_and_arguments_list.Command holds binary path and arguments list(
                    args = [
                        '0'
                        ], 
                    command = [
                        '0'
                        ], ), 
                init = argocd_client.models.command_holds_binary_path_and_arguments_list.Command holds binary path and arguments list(
                    args = [
                        '0'
                        ], 
                    command = [
                        '0'
                        ], ), 
                name = '0'
            )
        else :
            return V1alpha1ConfigManagementPlugin(
        )

    def testV1alpha1ConfigManagementPlugin(self):
        """Test V1alpha1ConfigManagementPlugin"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
