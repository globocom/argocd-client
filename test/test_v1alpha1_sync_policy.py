# coding: utf-8

"""
    Consolidate Services

    Description of all APIs  # noqa: E501

    The version of the OpenAPI document: version not set
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import argocd_client
from argocd_client.models.v1alpha1_sync_policy import V1alpha1SyncPolicy  # noqa: E501
from argocd_client.rest import ApiException

class TestV1alpha1SyncPolicy(unittest.TestCase):
    """V1alpha1SyncPolicy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V1alpha1SyncPolicy
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = argocd_client.models.v1alpha1_sync_policy.V1alpha1SyncPolicy()  # noqa: E501
        if include_optional :
            return V1alpha1SyncPolicy(
                automated = argocd_client.models.sync_policy_automated_controls_the_behavior_of_an_automated_sync.SyncPolicyAutomated controls the behavior of an automated sync(
                    prune = True, 
                    self_heal = True, ), 
                retry = argocd_client.models.v1alpha1_retry_strategy.v1alpha1RetryStrategy(
                    backoff = argocd_client.models.backoff_is_a_backoff_strategy_to_use_within_retry_strategy.Backoff is a backoff strategy to use within retryStrategy(
                        duration = '0', 
                        factor = '0', 
                        max_duration = '0', ), 
                    limit = '0', ), 
                sync_options = [
                    '0'
                    ]
            )
        else :
            return V1alpha1SyncPolicy(
        )

    def testV1alpha1SyncPolicy(self):
        """Test V1alpha1SyncPolicy"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
